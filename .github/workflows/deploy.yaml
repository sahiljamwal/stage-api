name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write # This is the important permission for OIDC
  contents: read # Standard read permission for the repo contents

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    environment:
      name: production # Or your environment name

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
          service_account: ${{ secrets.GCP_SA_EMAIL }}
          create_credentials_file: true
          export_environment_variables: true
          universe: googleapis.com
          cleanup_credentials: true
          access_token_lifetime: 3600s
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform
          id_token_include_email: false

      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build and push Docker image to Artifact Registry
        run: |
          IMAGE_NAME="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPO_NAME }}/${{ secrets.GCP_APP_NAME }}:${GITHUB_SHA}"
          docker build -t "$IMAGE_NAME" .
          docker push "$IMAGE_NAME"

      - name: Deploy to Cloud Run
        run: |
          IMAGE_NAME="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPO_NAME }}/${{ secrets.GCP_APP_NAME }}:${GITHUB_SHA}"
          gcloud run deploy ${{ secrets.GCP_APP_NAME }} \
            --image="$IMAGE_NAME" \
            --region=${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port=3000 \
            --quiet
